<?php

declare(strict_types=1);

$rules = [
    '@PER-CS2.0' => true,
    'align_multiline_comment' => true,
    'array_indentation' => true,
    'array_syntax' => ['syntax' => 'short'],
    'assign_null_coalescing_to_coalesce_equal' => false,
    'attribute_empty_parentheses' => true,
    'backtick_to_shell_exec' => true,
    'binary_operator_spaces' => true,
    'blank_line_after_namespace' => true,
    'blank_line_before_statement' => [
        'statements' => [
            'declare', 'return', 'if', 'case',
            'switch', 'try', 'while', 'continue',
            'do', 'foreach',
        ],
    ],
    'blank_line_between_import_groups' => false,
    'braces_position' => [
        'allow_single_line_anonymous_functions' => true,
        'allow_single_line_empty_anonymous_classes' => true,
    ],
    'cast_spaces' => ['space' => 'none'],
    'class_attributes_separation' => ['elements' => ['method' => 'one']],
    'class_definition' => ['single_line' => true],
    'class_keyword' => false,
    'class_reference_name_casing' => true,
    'clean_namespace' => true,
    'compact_nullable_type_declaration' => true,
    'concat_space' => ['spacing' => 'one'],
    'constant_case' => ['case' => 'lower'],
    'control_structure_braces' => true,
    'control_structure_continuation_position' => ['position' => 'same_line'],
    'declare_parentheses' => true,
    'declare_strict_types' => true,
    'echo_tag_syntax' => true,
    'elseif' => true,
    'empty_loop_body' => ['style' => 'braces'],
    'empty_loop_condition' => true,
    'explicit_indirect_variable' => true,
    'fully_qualified_strict_types' => true,
    'general_attribute_remove' => false,
    'general_phpdoc_tag_rename' => [
        'replacements' => ['inheritDocs' => 'inheritDoc'],
    ],
    'global_namespace_import' => [
        'import_classes' => true,
        'import_constants' => false,
        'import_functions' => false,
    ],
    'heredoc_closing_marker' => false,
    'heredoc_indentation' => ['indentation' => 'start_plus_one'],
    'include' => true,
    'increment_style' => true,
    'integer_literal_case' => true,
    'lambda_not_used_import' => true,
    'linebreak_after_opening_tag' => true,
    'magic_constant_casing' => true,
    'magic_method_casing' => true,
    'method_argument_space' => ['on_multiline' => 'ensure_fully_multiline'],
    'multiline_string_to_heredoc' => true,
    'native_function_casing' => true,
    'native_type_declaration_casing' => true,
    'no_alias_language_construct_call' => true,
    'no_alternative_syntax' => true,
    'no_binary_string' => true,
    'no_blank_lines_after_phpdoc' => true,
    'no_empty_comment' => true,
    'no_empty_phpdoc' => true,
    'no_empty_statement' => true,
    'no_extra_blank_lines' => ['tokens' => ['extra']],
    'no_leading_namespace_whitespace' => true,
    'no_mixed_echo_print' => true,
    'no_multiline_whitespace_around_double_arrow' => true,
    'no_null_property_initialization' => false,
    'no_short_bool_cast' => true,
    'no_singleline_whitespace_before_semicolons' => true,
    'no_spaces_around_offset' => true,
    'no_superfluous_phpdoc_tags' => ['allow_mixed' => true, 'remove_inheritdoc' => true],
    'no_trailing_comma_in_singleline' => true,
    'no_unneeded_braces' => ['namespaces' => true],
    'no_unneeded_control_parentheses' => [
        'statements' => [
            'break', 'clone', 'continue', 'echo_print',
            'others', 'return', 'switch_case', 'yield', 'yield_from',
        ],
    ],
    'no_unneeded_import_alias' => true,
    'no_leading_import_slash' => true,
    'no_unset_cast' => true,
    'no_unused_imports' => true,
    'no_useless_concat_operator' => true,
    'no_useless_else' => true,
    'no_useless_nullsafe_operator' => true,
    'no_whitespace_before_comma_in_array' => true,
    'normalize_index_brace' => true,
    'not_operator_with_successor_space' => true,
    'nullable_type_declaration' => ['syntax' => 'union'],
    'nullable_type_declaration_for_default_null_value' => true,
    'numeric_literal_separator' => ['strategy' => 'use_separator'],
    'object_operator_without_whitespace' => true,
    'operator_linebreak' => false,
    'ordered_attributes' => false,
    'ordered_imports' => true,
    'ordered_types' => ['null_adjustment' => 'always_first', 'sort_algorithm' => 'alpha'],
    'php_unit_attributes' => true,
    'php_unit_data_provider_method_order' => ['placement' => 'after'],
    'php_unit_fqcn_annotation' => true,
    'php_unit_method_casing' => ['case' => 'snake_case'],
    'php_unit_test_annotation' => ['style' => 'prefix'],
    'php_unit_test_case_static_method_calls' => ['call_type' => 'self'],
    'phpdoc_align' => ['align' => 'left'],
    'phpdoc_annotation_without_dot' => false,
    'phpdoc_indent' => true,
    'phpdoc_inline_tag_normalizer' => true,
    'phpdoc_line_span' => ['const' => 'multi', 'method' => 'multi', 'property' => 'multi'],
    'phpdoc_no_access' => true,
    'phpdoc_no_alias_tag' => false,
    'phpdoc_no_package' => true,
    'phpdoc_no_useless_inheritdoc' => true,
    'phpdoc_order' => true,
    'phpdoc_param_order' => true,
    'phpdoc_return_self_reference' => true,
    'phpdoc_scalar' => true,
    'phpdoc_separation' => true,
    'phpdoc_single_line_var_spacing' => true,
    'phpdoc_summary' => false,
    'phpdoc_tag_type' => ['tags' => ['inheritDoc' => 'inline']],
    'phpdoc_to_comment' => [
        'ignored_tags' => ['return', 'var', 'see', 'deprecated', 'todo'],
    ],
    'semicolon_after_instruction' => true,
    'simple_to_complex_string_variable' => true,
    'single_class_element_per_statement' => true,
    'single_import_per_statement' => true,
    'single_line_comment_spacing' => true,
    'single_line_comment_style' => true,
    'single_line_empty_body' => false,
    'single_line_throw' => false,
    'single_quote' => true,
    'single_space_around_construct' => true,
    'single_trait_insert_per_statement' => true,
    'space_after_semicolon' => ['remove_in_empty_for_expressions' => true],
    'standardize_increment' => true,
    'standardize_not_equals' => true,
    'string_implicit_backslashes' => true,
    'switch_continue_to_break' => true,
    'trailing_comma_in_multiline' => ['elements' => ['arrays', 'arguments', 'parameters']],
    'trim_array_spaces' => true,
    'type_declaration_spaces' => true,
    'types_spaces' => ['space' => 'single'],
    'unary_operator_spaces' => true,
    'void_return' => true,
    'whitespace_after_comma_in_array' => true,
    'yoda_style' => [
        'always_move_variable' => false, 'equal' => false,
        'identical' => false, 'less_and_greater' => null,
    ],
];

return (new PhpCsFixer\Config())
    ->setParallelConfig(
        PhpCsFixer\Runner\Parallel\ParallelConfigFactory::detect(),
    )
    ->setCacheFile(sys_get_temp_dir() . '/.php_cs.cache')
    ->setRiskyAllowed(true)
    ->setRules($rules);
