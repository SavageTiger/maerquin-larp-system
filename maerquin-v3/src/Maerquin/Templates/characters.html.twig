{% extends 'skeleton.html.twig' %}

{% block container %}

    <div class="columns is-gapless">
        <div class="column is-12 is-gapless">
            <div class="field is-pulled-right has-addons">
                &nbsp;
                <div class="control">
                    <input class="input" type="text" v-model="search" placeholder="Zoeken">
                </div>
            </div>
            <button class="button is-pulled-right"><i class="fa-solid fa-user-plus"></i>&nbsp;Nieuwe aanmaken
            </button>
        </div>
    </div>

    <div class="columns is-gapless">
        <div class="column is-12">

            <table class="table is-bordered is-striped is-narrow is-hoverable is-overview-table">
                <tr>
                    <th>Naam</th>
                    <th>Speler</th>
                </tr>
                <tr v-for="character in filteredCharacters" :key="character.id">
                    <td class="is-clickable" @click="navigateToCharacter(character.id)">
                        <a href="#">{{ '{{ character.name }}' }}</a>
                    </td>
                    <td>
                        {{ '{{ character.playerName }}' }}
                    </td>
                </tr>
            </table>

        </div>
    </div>

    <script>
        Vue.createApp({
            data() {
                return {
                    search: '',
                    characters: {{ characters.serialize|json_encode|raw }},
                    players: {{ players.serialize|json_encode|raw }}
                };
            },
            computed: {
                filteredCharacters() {
                    return this.characters.filter((character) => {
                        return (
                            character.name.toLowerCase().includes(this.search.toLowerCase()) ||
                            character.playerName.toLowerCase().includes(this.search.toLowerCase())
                        );
                    });
                }
            },
            methods: {
                navigateToCharacter(characterId) {
                    document.location.href = `/admin/characters/${characterId}.html`;
                }
            },
            mounted() {
                for (let index = 0; index < this.characters.length; index++) {
                    for (const player of this.players) {
                        if (player.id === this.characters[index].playerId) {
                            this.characters[index].playerName = player.name

                            break;
                        }

                        this.characters[index].playerName = '(geen)';
                    }
                }
            }
        }).mount('.content');
    </script>

{% endblock %}
