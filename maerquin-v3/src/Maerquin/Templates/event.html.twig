{% extends 'skeleton.html.twig' %}

{% block container %}

    <div class="columns is-gapless">
        <div class="column is-12">
            <button onclick="return false" class="button is-pulled-right" @click="saveEvent('{{ event.id }}')">
                <i class="fa-solid fa-save"></i>&nbsp;Opslaan
            </button>
            &nbsp;
        </div>
    </div>

    {% if persisted %}
        <article class="message is-success">
            <div class="message-header">
                <p>Opgeslagen</p>
            </div>
            <div class="message-body">
                Het event is succesvol opgeslagen.
            </div>
        </article>
    {% endif %}

    <div class="spacer is-12"></div>

    <input class="input" name="characters" type="hidden"
           v-model="characterIds" placeholder=""/>

    <div class="columns">
        <div class="column is-6">
            <article class="message is-dark">
                <div class="message-header">
                    {% if event.name %}
                        {{ event.name }}
                    {% else %}
                        Nieuw event aanmaken
                    {% endif %}
                </div>
                <div class="message-body">
                    <div class="field is-horizontal">
                        <div class="field-label is-normal">
                            <label class="label">Naam</label>
                        </div>
                        <div class="field-body">
                            <div class="field">
                                <div class="control">
                                    <input class="input" name="name" type="text"
                                           value="{{ event.name }}" placeholder=""/>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="field is-horizontal">
                        <div class="field-label is-normal">
                            <label class="label">Alt. Naam</label>
                        </div>
                        <div class="field-body">
                            <div class="field">
                                <div class="control">
                                    <input class="input" name="secondaryName" type="text"
                                           value="{{ event.secondaryName }}" placeholder=""/>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="field is-horizontal">
                        <div class="field-label is-normal">
                            <label class="label">Punten</label>
                        </div>
                        <div class="field-body">
                            <div class="field">
                                <div class="control">
                                    <input class="input" name="points" type="text"
                                           value="{{ event.points }}" placeholder=""/>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="field is-horizontal">
                        <div class="field-label is-normal">
                            <label class="label">Startdatum</label>
                        </div>
                        <div class="field-body">
                            <div class="field">
                                <div class="control">
                                    <input class="input input-date" name="startDateDay" type="text"
                                           value="{{ event.startDate.format('d') }}" placeholder=""/>

                                    <input class="input input-date" name="startDateMonth" type="text"
                                           value="{{ event.startDate.format('m') }}" placeholder=""/>

                                    <input class="input input-date" name="startDateYear" type="text"
                                           value="{{ event.startDate.format('Y') }}" placeholder=""/>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="field is-horizontal">
                        <div class="field-label is-normal">
                            <label class="label">Einddatum</label>
                        </div>
                        <div class="field-body">
                            <div class="field">
                                <div class="control">
                                    <input class="input input-date" name="endDateDay" type="text"
                                           value="{{ event.endDate.format('d') }}" placeholder=""/>

                                    <input class="input input-date" name="endDateMonth" type="text"
                                           value="{{ event.endDate.format('m') }}" placeholder=""/>

                                    <input class="input input-date" name="endDateYear" type="text"
                                           value="{{ event.endDate.format('Y') }}" placeholder=""/></div>
                            </div>
                        </div>
                    </div>

                    <div class="field is-horizontal">
                        <div class="field-label is-normal">
                            <label class="label">Notitie</label>
                        </div>
                        <div class="field-body">
                            <div class="field">
                                <textarea name="notes" class="input">{{ event.getNotes() }}</textarea>
                            </div>
                        </div>
                    </div>

                </div>
            </article>
        </div>

        {% if event.name %}
        <div class="column is-6">
            <article class="message is-dark">
                <div class="message-header">
                    Characters aanwezig
                </div>
                <div class="message-body">
                    <div class="box is-shadowless inner-box">
                        <button class="button is-pulled-right" onclick="return false"
                                @click="manageCharacters">&nbsp;Aanpassen
                        </button>

                        <div class="content">
                            <ol type="1">
                                <li v-for="character in characters">
                                    <i class="fa-regular fa-id-badge"></i>
                                    {{ '{{ character.name }}' }}
                                </li>
                            </ol>
                        </div>
                    </div>
                </div>
            </article>
        </div>
    </div>

    <div class="modal" id="manageCharacters">
        <div class="modal-background"></div>
        <div class="modal-card">
            <header class="modal-card-head">
                <p class="modal-card-title">Characters</p>
                <div class="control">
                    <input class="input" type="text" v-model="characterFilter" placeholder="Filter">
                </div>
            </header>
            <section class="modal-card-body">
                <div class="checkbox" v-for="character in filteredCharacters">
                    <label class="checkbox">
                        <input type="checkbox"
                               :value="character"
                               v-model="characters"
                               @change="orderCharacters"
                        />
                        {{ '{{ character.name }}' }}
                    </label>
                </div>
            </section>
            <footer class="modal-card-foot">
                <div class="buttons">
                    <button class="button" onclick="return false">Sluiten</button>
                </div>
            </footer>
        </div>
    </div>
    {% endif %}

    <script>
        Vue.createApp({
            data() {
                return {
                    characterFilter: '',
                    characters: {{ characters.serialize(true)|json_encode(constant('JSON_PRETTY_PRINT'))|raw }},
                    allCharacters: []
                };
            },
            computed: {
                characterIds: function () {
                    return JSON.stringify(this.characters.map((character) => {
                        return character.id;
                    }));
                },
                filteredCharacters() {
                    return this.allCharacters.filter((character) => {
                        return character.name.toLowerCase().includes(
                            this.characterFilter.toLowerCase()
                        ) !== false
                    });
                },
            },
            methods: {
                saveEvent(eventId) {
                    const eventForm = serializeForm('containerForm');

                    axios
                        .post(`/admin/events/${eventId}.html`, { event: eventForm })
                        .then(() => {
                            document.location.href = `/admin/events/persisted/${eventId}.html`
                        })
                        .catch((error) => {
                            const message = error.response.data.error.description;

                            alert(message);
                        });

                    return false;
                },

                manageCharacters() {
                    axios.get('/admin/characters/api?compact=true').then((response) => {
                        this.allCharacters = response.data.data ?? [];

                        openModal(document.getElementById('manageCharacters'));
                    });
                },

                orderCharacters() {
                    this.characters = this.characters.sort(
                        (left, right) => left.name.localeCompare(right.name)
                    );
                }
            },
            mounted() {
                this.characters = this.characters.sort(
                    (left, right) => left.name.localeCompare(right.name)
                )
            }
        }).mount('.content');
    </script>

{% endblock %}
